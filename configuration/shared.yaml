# Remove pre-installed apps using a custom script
- resource: PSDscResources/Script
  id: WindowsDebloatScript
  directives:
    description: Remove pre-installed apps
  settings:
    GetScript: |
      $appsList = @("Microsoft.MicrosoftSolitaireCollection", "Clipchamp.Clipchamp", "MicrosoftTeams", "Microsoft.BingNews", "Microsoft.People", "Microsoft.PowerAutomateDesktop", "SpotifyAB.SpotifyMusic")

      $foundApps = @()
      foreach ($app in $appsList) {
          $foundApp = Get-AppxPackage -AllUsers -Name $app

          if ($foundApp -ne $null) {
              $foundApps += $foundApp
          }
      }

      return @{
          Result = $foundApps
      }
    TestScript: |
      $appsList = @("Microsoft.MicrosoftSolitaireCollection", "Clipchamp.Clipchamp", "MicrosoftTeams", "Microsoft.BingNews", "Microsoft.People", "Microsoft.PowerAutomateDesktop", "SpotifyAB.SpotifyMusic")

      foreach ($app in $appsList) {
          $foundApp = Get-AppxPackage -Name $app

          if ($foundApp -ne $null) {
              return $false
          }
      }

      return $true
    SetScript: |
      $appsList = @("Microsoft.MicrosoftSolitaireCollection", "Clipchamp.Clipchamp", "MicrosoftTeams", "Microsoft.BingNews", "Microsoft.People", "Microsoft.PowerAutomateDesktop", "SpotifyAB.SpotifyMusic")

      foreach ($app in $appsList) {
          # Remove installed app for all existing users
          Get-AppxPackage -Name $app -AllUsers | Remove-AppxPackage
      }

      function unpin_taskbar([string]$appname) {
          ((New-Object -Com Shell.Application).NameSpace('shell:::{4234d49b-0245-4df3-b780-3893943456e1}').Items() `
          | Where-Object{$_.Name -eq $appname}).Verbs() | Where-Object{$_.Name.replace('&','') -match 'Unpin from taskbar'} `
          | ForEach-Object{$_.DoIt()}
      }

      unpin_taskbar('Microsoft Store')

# Enable Developer Mode
- resource: Microsoft.Windows.Developer/DeveloperMode
  id: DeveloperMode
  directives:
    description: Enable Developer Mode
    allowPrerelease: true
  settings:
    Ensure: Present

# Install Telegram
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: Telegram
  directives:
    description: Install Telegram
    allowPrerelease: true
  settings:
    id: Telegram.TelegramDesktop
    source: winget
    Ensure: Present

# Install Discord
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: Discord
  directives:
    description: Install Discord
    allowPrerelease: true
  settings:
    id: Discord.Discord
    source: winget
    Ensure: Present

# Install Signal
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: Signal
  directives:
    description: Install Signal
    allowPrerelease: true
  settings:
    id: OpenWhisperSystems.Signal
    source: winget
    Ensure: Present

# Install Bitwarden.Bitwarden
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: Bitwarden
  directives:
    description: Install Bitwarden
    allowPrerelease: true
  settings:
    id: Bitwarden.Bitwarden
    source: winget
    Ensure: Present

# Install Microsoft.PowerToys
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: PowerToys
  directives:
    description: Install Microsoft PowerToys
    allowPrerelease: true
  settings:
    id: Microsoft.PowerToys
    source: winget
    Ensure: Present

# Configure PowerToys
- resource: PowerToysConfigure
  directives:
    description: Configure PowerToys
  settings:
    ShortcutGuide:
      Enabled: false

# Intall 7zip
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: 7zip
  directives:
    description: Install 7zip
    allowPrerelease: true
  settings:
    id: 7zip.7zip
    source: winget
    Ensure: Present

# Install Microsoft Powershell
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: MicrosoftPowershell
  directives:
    description: Install Microsoft Powershell
    allowPrerelease: true
  settings:
    id: Microsoft.PowerShell
    source: winget
    Ensure: Present

# Install OhMyPosh
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: OhMyPosh
  directives:
    description: Install OhMyPosh
    allowPrerelease: true
  settings:
    id: JanDeDobbeleer.OhMyPosh
    source: winget
    Ensure: Present

# Install Sysinternals
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: Sysinternals
  directives:
    description: Install Sysinternals
    allowPrerelease: true
  settings:
    id: Microsoft.Sysinternals
    source: winget
    Ensure: Present

# Install GnuPG.Gpg4win
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: Gpg4win
  directives:
    description: Install Gpg4win
    allowPrerelease: true
  settings:
    id: GnuPG.Gpg4win
    source: winget
    Ensure: Present

# Install Yubico.YubikeyManager
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: YubikeyManager
  directives:
    description: Install Yubikey Manager
    allowPrerelease: true
  settings:
    id: Yubico.YubikeyManager
    source: winget
    Ensure: Present

# Install Postman
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: Postman
  directives:
    description: Install Postman
    allowPrerelease: true
  settings:
    id: Postman.Postman
    source: winget
    Ensure: Present

# Install Obsidian
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: Obsidian
  directives:
    description: Install Obsidian
    allowPrerelease: true
  settings:
    id: Obsidian.Obsidian
    source: winget
    Ensure: Present

# Install Visual Studio Code
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: VisualStudioCode
  directives:
    description: Install Visual Studio Code
    allowPrerelease: true
  settings:
    id: Microsoft.VisualStudioCode
    source: winget
    Ensure: Present

# Install Visual Studio Code Extensions
- resource: vscode/VSCodeExtension
  directives:
    description: Install ms-dotnettools.vscode-dotnet-pack Extension
  settings:
    Name: ms-dotnettools.vscode-dotnet-pack
- resource: vscode/VSCodeExtension
  directives:
    description: Install ms-vscode.vscode-node-azure-pack Extension
  settings:
    Name: ms-vscode.vscode-node-azure-pack
- resource: vscode/VSCodeExtension
  directives:
    description: Install ms-vscode-remote.vscode-remote-extensionpack Extension
  settings:
    Name: ms-vscode-remote.vscode-remote-extensionpack
- resource: vscode/VSCodeExtension
  directives:
    description: Install formulahendry.auto-complete-tag Extension
  settings:
    Name: formulahendry.auto-complete-tag
- resource: vscode/VSCodeExtension
  directives:
    description: Install mubaidr.vuejs-extension-pack Extension
  settings:
    Name: mubaidr.vuejs-extension-pack
- resource: vscode/VSCodeExtension
  directives:
    description: Install ms-dotnettools.csdevkit Extension
  settings:
    Name: ms-dotnettools.csdevkit
- resource: vscode/VSCodeExtension
  directives:
    description: Install ms-dotnettools.vscodeintellicode-csharp Extension
  settings:
    Name: ms-dotnettools.vscodeintellicode-csharp
- resource: vscode/VSCodeExtension
  directives:
    description: Install ms-vscode.powershell Extension
  settings:
    Name: ms-vscode.powershell
- resource: vscode/VSCodeExtension
  directives:
    description: Install bierner.markdown-mermaid Extension
  settings:
    Name: bierner.markdown-mermaid
- resource: vscode/VSCodeExtension
  directives:
    description: Install bpruitt-goddard.mermaid-markdown-syntax-highlighting Extension
  settings:
    Name: bpruitt-goddard.mermaid-markdown-syntax-highlighting
- resource: vscode/VSCodeExtension
  directives:
    description: Install yzhang.markdown-all-in-one Extension
  settings:
    Name: yzhang.markdown-all-in-one
- resource: vscode/VSCodeExtension
  directives:
    description: Install ciarant.vscode-structurizr Extension
  settings:
    Name: ciarant.vscode-structurizr
- resource: vscode/VSCodeExtension
  directives:
    description: Install redhat.vscode-yaml Extension
  settings:
    Name: redhat.vscode-yaml
- resource: vscode/VSCodeExtension
  directives:
    description: Install bradlc.vscode-tailwindcss Extension
  settings:
    Name: bradlc.vscode-tailwindcss
- resource: vscode/VSCodeExtension
  directives:
    description: Install catppuccin.catppuccin-vsc Extension
  settings:
    Name: catppuccin.catppuccin-vsc
- resource: vscode/VSCodeExtension
  directives:
    description: Install catppuccin.catppuccin-vsc-icons Extension
  settings:
    Name: catppuccin.catppuccin-vsc-icons
- resource: vscode/VSCodeExtension
  directives:
    description: Install editorconfig.editorconfig Extension
  settings:
    Name: editorconfig.editorconfig
- resource: vscode/VSCodeExtension
  directives:
    description: Install lokalise.i18n-ally Extension
  settings:
    Name: lokalise.i18n-ally
- resource: vscode/VSCodeExtension
  directives:
    description: Install ms-playwright.playwright Extension
  settings:
    Name: ms-playwright.playwright





# Update the start menu layout to show fewer recommendations and more pins
- resource: PSDscResources/Registry
  id: UpdateStartLayout
  directives:
    description: Updates the start menu layout to less recommendations and more pins
    allowPrerelease: false
  settings:
    Key: HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced
    ValueName: Start_Layout
    ValueType: DWord
    ValueData: 1
    Force: true
    Ensure: Present

# Remove the widgets button from the taskbar
- resource: PSDscResources/Registry
  id: RemoveTaskBarWidgetsButton
  directives:
    description: Removes the widgets button from the taskbar
    allowPrerelease: true
  settings:
    Key: HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced
    ValueName: TaskbarDa
    ValueType: DWord
    ValueData: 0
    Force: true
    Ensure: Present

# Remove the chat button from the taskbar
- resource: PSDscResources/Registry
  id: RemoveTaskBarChatButton
  directives:
    description: Removes the chat button from the taskbar
    allowPrerelease: true
  settings:
    Key: HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced
    ValueName: TaskbarMn
    ValueType: DWord
    ValueData: 0
    Force: true
    Ensure: Present

# Remove the search field from the taskbar
- resource: PSDscResources/Registry
  id: RemoveTaskBarSearchField
  directives:
    description: Removes the search field from the taskbar
    allowPrerelease: true
  settings:
    Key: HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Search
    ValueName: SearchboxTaskbarMode
    ValueType: DWord
    ValueData: 0
    Force: true
    Ensure: Present

# Set windows explorer settings
- resource: Microsoft.Windows.Developer/WindowsExplorer
  directives:
    description: Modify Windows Explorer settings
    allowPrerelease: true
  settings:
    FileExtensions: Show
    HiddenFiles: Show
    ItemCheckBoxes: Hide
    RestartExplorer: True # Use caution when setting `RestartExplorer: true` as this will force explorer to close. Required for all WindowsExplorer settings.

# Enable dark mode
- resource: Microsoft.Windows.Developer/EnableDarkMode
  directives:
    description: Disable dark mode
    allowPrerelease: true
  settings:
    Ensure: Absent
    # Use caution when setting `RestartExplorer: true` as this will force explorer to close.
    RestartExplorer: true # Required to apply changes

# Enable Windows Sandbox
- resource: PSDscResources/WindowsOptionalFeature
  id: WindowsSandbox
  directives:
    description: Ensure Windows Sandbox is enabled
  settings:
    Name: Containers-DisposableClientVM
    Ensure: Present



# Install .NET SDK 9.0
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: DotNetSDK9
  directives:
    description: Install .NET SDK 9.0
    allowPrerelease: true
  settings:
    id: Microsoft.DotNet.SDK.9
    source: winget
    Ensure: Present


# Install Azure CLI
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: AzureCli
  directives:
    description: Install Azure CLI
    allowPrerelease: true
  settings:
    id: Microsoft.AzureCLI
    source: winget
    Ensure: Present

# Install Azure Data Studio
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: AzureDataStudio
  directives:
    description: Install Azure Data Studio
    allowPrerelease: true
  settings:
    id: Microsoft.AzureDataStudio
    source: winget
    Ensure: Present

# Install Azure Storage Explorer
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: AzureStorageExplorer
  directives:
    description: Install Azure Storage Explorer
    allowPrerelease: true
  settings:
    id: Microsoft.Azure.StorageExplorer
    source: winget
    Ensure: Present

# Install Node.js
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: Nodejs
  directives:
    description: Install Node.js
    allowPrerelease: true
  settings:
    id: OpenJS.Nodejs
    source: winget
    Ensure: Present

# Install pnpm
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: Pnpm
  directives:
    description: Install pnpm
    allowPrerelease: true
  settings:
    id: pnpm.pnpm
    source: winget
    Ensure: Present

# Install Python
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: Python
  directives:
    description: Install Python
    allowPrerelease: true
  settings:
    id: Python.Python.3.13
    source: winget
    Ensure: Present


# Install Git
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: Git
  directives:
    description: Install Git
    allowPrerelease: true
  settings:
    id: Git.Git
    source: winget
    Ensure: Present


# Install LinqPad
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: LinqPad
  directives:
    description: Install LinqPad
    allowPrerelease: true
  settings:
    id: LINQPad.LINQPad.8
    source: winget
    Ensure: Present

# Install Azure Functions Core Tools
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: AzureFunctionsCoreTools
  directives:
    description: Install Azure Functions Core Tools
    allowPrerelease: true
  settings:
    id: Microsoft.Azure.FunctionsCoreTools
    source: winget
    Ensure: Present

# Install WSL
- resource: PSDscResources/Script
  id: WSLInstall
  directives:
    description: Install WSL
  settings:
    GetScript: |
      $wslCommand = Get-Command wsl.exe -ErrorAction SilentlyContinue
      return @{
          Result = $wslCommand
      }
    TestScript: |
      $wslCommand = Get-Command wsl.exe -ErrorAction SilentlyContinue
      if ($wslCommand -eq $null) {
          return $false
      }else {
          return $true
      }
    SetScript: |
      Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux -NoRestart
      wsl --install


# Install Docker Desktop
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: DockerDesktop
  directives:
    description: Install Docker
    allowPrerelease: true
  settings:
    id: Docker.DockerDesktop
    source: winget
    Ensure: Present

# Install JetBrains.Toolbox
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: JetBrainsToolbox
  directives:
    description: Install JetBrains Toolbox
    allowPrerelease: true
  settings:
    id: JetBrains.Toolbox
    source: winget
    Ensure: Present

# Install JetBrains dotTrace
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: JetBrainsDotTrace
  directives:
    description: Install JetBrains dotTrace
    allowPrerelease: true
  settings:
    id: JetBrains.dotTrace
    source: winget
    Ensure: Present

# Install ImHex
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: ImHex
  directives:
    description: Install ImHex
    allowPrerelease: true
  settings:
    id: WerWolv.ImHex
    source: winget
    Ensure: Present

# Install Figma
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: Figma
  directives:
    description: Install Figma
    allowPrerelease: true
  settings:
    id: Figma.Figma
    source: winget
    Ensure: Present

# Install Affinity.Photo
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: Figma
  directives:
    description: Install Figma
    allowPrerelease: true
  settings:
    id: "9P8DVF1XW02V"
    source: msstore
    Ensure: Present

# Install Affinity.Designer
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: Figma
  directives:
    description: Install Figma
    allowPrerelease: true
  settings:
    id: "9N2D0P16C80H"
    source: msstore
    Ensure: Present

# Install Affinity.Publisher
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: Figma
  directives:
    description: Install Figma
    allowPrerelease: true
  settings:
    id: "9NTV2DZ11KD9"
    source: msstore
    Ensure: Present

# Install Nuget Package Manager
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: Figma
  directives:
    description: Install Figma
    allowPrerelease: true
  settings:
    id: "9WZDNCRDMDM3"
    source: msstore
    Ensure: Present
